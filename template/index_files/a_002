function layer_media_ready_func(layerid){
    var userAgent = navigator.userAgent.toLowerCase();
	if (!/iphone/i.test(userAgent)){
		var imgover=$('#wp-media-image_'+layerid).closest('.img_over');
		imgover.children('.imgloading').width(imgover.width()).height(imgover.height());
	}
	$('#'+layerid).layer_ready(function(){
		if(typeof(layer_img_lzld)=="function"){
		layer_img_lzld(layerid);
		}
	});
}

function layer_media_lazyload_func(layerid, iswx){
    var imgwidth = $('#'+layerid+' .wp-media_content').width();
    var imgheight = $('#'+layerid+' .wp-media_content').height();	
    var imgtop = ($('#wp-media-image_'+layerid));
    if(parseInt(imgtop.css('top'))<-600&&imgtop.attr('src').indexOf('blank.gif')>0){imgtop.attr('src',imgtop.attr('data-original'));}
    if(iswx){
 	if(imgtop.offset().top<window.screen.availHeight&&imgtop.attr('src').indexOf('blank.gif')>0){
 		imgtop.attr('src',imgtop.attr('data-original'));
 	}
 	setTimeout(function(){
		 var imgdisplay = imgtop.css('display');
		 if(imgdisplay&&imgdisplay=='inline') imgtop.css('display','inline-block');
		 },1200);
    }
	// bug#4119 - 模块自适应高度导致的留白
	$('#'+layerid).bind("wrapmodheightadapt", function(){
		$('.img_over, img.paragraph_image', this).height($(this).height());
	});
};
function layer_adv_navbar_inits1_func(options){
    var layerid = options.layerid, $L = $('#'+layerid);
    $L.find('.advnavbar-enter-icon').click(function(){/*开启「浮动」窗口*/
	var $C = $('#scroll_container'),_t = Math.max($(window).scrollTop(), $C.scrollTop()),_l = options['popup_left'];
	if (! $C.children('#'+layerid+'_popup').length) {
		$L.find('.sitestar_sck_background').clone().attr("id", layerid+'_popup').css({
			"left": _l+'px',"height": Math.min($C.height(), $(window).height())+'px'
		}).appendTo('#scroll_container').animate({opacity: 'show'}, 1000);
	}
	var $P = $C.children('#'+layerid+'_popup'),
	ismobile = (typeof window.ontouchstart !== 'undefined'),
	fixedH = 20 * 2 + 26 + 22 + 60 + 22 * 2/* 直接取样式表中的固定尺寸以免动态计算 */;
	// 绑定RESIZE事件以更新「浮动」窗口及「菜单」展示区高度
	$(window).bind('resize.mbarpopup', function(e, p){
		var $wrapper = $P.children('.menu_wrapper'),maxH = Math.min($C.height(), $(window).height()),
		btmH = $P.find('.sitestar_products_img_button:visible').length ? 74 : 0;$P.css("height", maxH+'px');
		$wrapper.css("height", Math.max(112, maxH - fixedH - btmH)+'px');
		if (p == 'scrolltrigger') return false;
		if (ismobile == false) {/* PC端绑定JSCROLL事件 */
			$LAB.script(relativeToAbsoluteURL('script/jscroll.js')).wait(function(){
				var stimer = setTimeout(function(){$wrapper.jscroll();clearTimeout(stimer)},1000);
			});
		} else {
			$wrapper.css({"overflow-x": 'hidden',"overflow-y": 'auto'});
			// Fixed bug#5508(「高级导航」浮动层在全屏滚动页无法滚动)
			(function(win){win.advbarscroll=function(){return $wrapper.is(':visible')}})(window);
		}
	}).triggerHandler("resize.mbarpopup");
	// 重新定位「浮动」窗口
	$C.add(window).bind('scroll.mbarpopup', function(){
		$(this).triggerHandler("resize.mbarpopup", ['scrolltrigger']);
	});
    if (options.isedit === '0') {
	// 二级菜单展示
	var pagcnt = $._parseFloat(options.pagcnt)/* 最大页数 */;
	$P.find('.sitestar_products_img > li.multi').click(function(){
		var $li = $(this),regarr = /\bmi\d+\b/.exec($li.attr("class")||"");
		if ((regarr != null) && regarr.length) {
			var ckey = regarr[0],$subox = $li.parent().siblings('.sitestar_details_ua'),
			$scul = $subox.find('.sitestar_details_ua_out > ul'),$spager = $subox.find('.subm_pager');
			$scul.css("margin-left", (0 - $scul.children('.s_'+ckey).index() * 295)+'px');
			// 二级菜单栏目分页
			var $curpager = $spager.find('li.text'+ckey),pagid = $curpager.index() + 1;
			var mleft = 0;/* ”页号“容器相对偏移量 */
			if (pagid <= 3) mleft = 0;
			else if (pagid > pagcnt - 3) mleft = 0 - (pagcnt - 6) * 14;
			else mleft = 0 - (pagid - 3) * 14;
			$spager.find('ul').animate({"margin-left": mleft+'px'});
			
			$curpager.addClass("on").siblings().removeClass("on");
			// 切换效果
			var $liparent = $li.parent();if($liparent.is(':animated')) $liparent.stop();
			$liparent.animate({opacity: 'hide'}, 500, function(){
				if ($subox.is(':animated')) $subox.stop();
				$subox.animate({opacity: 'show'}, 500);
			});
			if (ismobile == false) {/* PC端重新绑定JSCROLL事件 */
				$LAB.script(relativeToAbsoluteURL('script/jscroll.js')).wait(function(){
					var stimer = setTimeout(function(){
						$P.children('.menu_wrapper').jscroll().children('.jscroll-c').css("top", '0px');
						clearTimeout(stimer);
					}, 1000);
				});
			}
		}
	});
	// 二级菜单切换
	var $uabox = $P.find('.sitestar_details_ua');
	if ($uabox.length > 0) {
		var $spager = $P.find('.subm_pager'),liwidth = 295/* 二级菜单项栏目宽度 */,
		execPager = function(page_id, type){
			var $ul = $spager.find('ul');
			if (typeof type == 'undefined') {
				var $curli = $ul.find('li:eq('+(page_id - 1)+')'),
				regarr = /\btext(mi\d+)\b/.exec($curli.attr("class")||"");
				if ((regarr != null) && regarr.length) {
					var $scul = $P.find('.sitestar_details_ua_out > ul'),
					index = $scul.children('li.s_'+regarr[1]).index();
					$scul.animate({"margin-left": (0 - index * liwidth)+'px'})
				}
			}
			// 分页（当前页号”前2后3“）
			var mleft = 0;/* ”页号“容器相对偏移量 */
			if (page_id <= 3) mleft = 0;
			else if (page_id > pagcnt - 3) mleft = 0 - (pagcnt - 6) * 14;
			else mleft = 0 - (page_id - 3) * 14;
			$ul.animate({"margin-left": mleft+'px'});
			$ul.find('li:eq('+(page_id - 1)+')').addClass("on").siblings().removeClass("on");
		},$mswrap = $uabox.find('> .sitestar_details_ua_out > ul');
		$spager.children('a').click(function(){
			var $a = $(this),$pager = $a.siblings('.mdot_slider'),
			pid = $pager.find('li.on').index() + 1 + ($a.hasClass("snext")?1:-1);
			if (pid > 0 && pid <= pagcnt) execPager(pid);
			return false;
		});
		if (ismobile) {/* 手机端 */
			(function(){
				var target = $mswrap[0],pagex = pagey = curleft = 0;
				target.addEventListener("touchstart", function(e){
					var $target = $(this);
					pagex = e.touches[0].pageX;
					pagey = e.touches[0].pageY;
					curleft = $._parseFloat($target.css("margin-left"));
				}, false);
				target.addEventListener("touchmove", function(e){
					if ($mswrap.is(':animated')) $mswrap.stop(true, false);
					// init
					var movex = e.touches[0].pageX - pagex,
					movey = e.touches[0].pageY - pagey,newleft = curleft + movex;
					// fixed touchmove
					if (Math.abs(movey) < 10 && Math.abs(movex) > 5) {
						e.preventDefault();
						// animated
						$mswrap.css("margin-left", newleft+'px')
						.find('li a.navtitle').bind('click', function(e){e.preventDefault()});/*Disabled <a>*/
					}
				}, false);
				target.addEventListener("touchend", function(e){
					var newleft = index = 0,movex = e.changedTouches[0].pageX - pagex,moveln = 30/*moved length*/,
					moved = false,$pager_switch = $uabox.children('.sitestar_details_switch'),
					curindex = $pager_switch.length?$pager_switch.find('.mdot_slider li.on').index():0;
					if (Math.abs(movex) >= moveln) {/* 只有鼠标滑动的距离超出moveln值时才切换 */
						moved = true;index = curindex + (movex < 0 ? 1 : -1);
						if(index < 0 || (movex < 0 && (curindex == pagcnt - 1))) index = curindex;
						newleft = 0 - index * liwidth;
					} else {index = curindex;newleft = 0 - curindex * liwidth}
					$mswrap.animate({"margin-left": newleft+'px'}, function(){
						$('li a.navtitle', this).unbind('click')/*Enabled <a>*/
						if (moved == false) return false;
						if (index >= 0 && index < pagcnt) execPager(index + 1, 'slider');
						if (index == 0) $(this).css("margin-left", '0px');
						if (index == pagcnt - 1) $(this).css("margin-left", (0 - index * liwidth)+'px');
					});
				}, false);
			})();
		} else {/* PC端 */
			$mswrap.bind('mousedown.navbarslider', function(e){e.preventDefault();
				var $target = $(this),pagex = e.pageX,curleft = $._parseFloat($target.css("margin-left"));
				if ($target.is(':animated')) $target.stop(true, false);
				$(document).bind('mousemove.navbarslider', function(e){e.preventDefault();
					$target.css("margin-left", (curleft + e.pageX - pagex)+'px')
					.find('li a.navtitle').bind('click', function(e){e.preventDefault()});/*Disabled <a>*/
				}).bind('mouseup.navbarslider', function(e){e.preventDefault();
					$(document).unbind('.navbarslider');
					var newleft = index = 0,movex = e.pageX - pagex,moved = false,
					moveln = 30,$pager_switch = $uabox.children('.sitestar_details_switch'),
					curindex = $pager_switch.length?$pager_switch.find('.mdot_slider li.on').index():0;
					if (Math.abs(movex) >= moveln) {/* 只有鼠标滑动的距离超出moveln值时才切换 */
						moved = true;index = curindex + (movex < 0 ? 1 : -1);
						if(index < 0 || (movex < 0 && (curindex == pagcnt - 1))) index = curindex;
						newleft = 0 - index * liwidth;
					} else {index = curindex;newleft = 0 - curindex * liwidth}
					// Animate
					$target.animate({"margin-left": newleft+'px'}, function(){
						$('li a.navtitle', this).unbind('click')/*Enabled <a>*/
						if (moved == false) return false;
						if (index >= 0 && index < pagcnt) execPager(index + 1, 'slider');
						if (index == 0) $(this).css("margin-left", '0px');
						if (index == pagcnt - 1) $(this).css("margin-left", (0 - index * liwidth)+'px');
					});
				});
			});
		}
		// 返回主菜单
		$P.find('.sitestar_details_return').click(function(){
			var $sdua = $(this).closest('.sitestar_details_ua');
			if ($sdua.is(':animated')) $sdua.stop();
			$sdua.animate({opacity: 'hide'}, 500, function(){
				var $spimg = $(this).siblings('.sitestar_products_img');
				if ($spimg.is(':animated')) $spimg.stop();
				$spimg.animate({opacity: 'show'}, 500);
			});
			if (ismobile == false) {/* PC端重新绑定JSCROLL事件 */
				$LAB.script(relativeToAbsoluteURL('script/jscroll.js')).wait(function(){
					var stimer = setTimeout(function(){
						$P.children('.menu_wrapper').jscroll().children('.jscroll-c').css("top", '0px');
						clearTimeout(stimer);
					},1000);
				});
			}
		});
	}
	//「关键词」检索
	$P.find('a.button').click(function(){
		var $inpkey = $(this).closest('.left_fax').find('input.keysearch'),
		key = $.trim($inpkey.val()||"");
		if (key.length > 0) {
                   var params = {"type": 'title',"infotype": '0',"product_page": options.prdurl,"search_listNum": options.pernum,"openProductUrl": options.target,"keywords": key};
			$LAB.script(relativeToAbsoluteURL('mplugin/adv_navbar/js/prdsearch_popup.js')).wait(function(){
				prdsearch_popup(parseToURL('msitesearch', 'search', params), {"height": $P.height()});
			});
		} else alert(options.isrequired);
		
		return false;
	});
	//「关键词」检索Enter事件
	$P.find('input.keysearch').keydown(function(e){
		(e.keyCode == 13) && $P.find('a.button').triggerHandler('click');
	});
	// 关闭「浮动」窗口
	$P.find('a.close').click(function(){
		if ($P.is(':animated')) $P.stop();
		$P.animate({opacity: 'hide'}, 100, function(){
			$P.remove();$C.add(window).unbind('.mbarpopup');
		});
		return false;
	});
    }
});
};
function layer_mslider_preload_func(layerid){
    window['preload_'+layerid] = function(url, callback){
        var img = new Image();
        img.onload = function(){
        	callback(img.width, img.height);
        	img.onload = null;
        };
        img.src = url;
    };
}

function layer_mslider_ready_func(params){
    var $mscontent = $('#'+params.layerid+' > .wp-mslider_content'),
    $mswrap = $mscontent.children('ul.mslider_wrapper'),maxln = $._parseFloat(params.framecnt);
    // Images adaptive
    var width = $mscontent.width()||300,maxwidth = (maxln + 2) * width;
    var ua = navigator.userAgent.toLowerCase() || '';
    if(ua.match(/\sucbrowser\/.+\s+mobile/g)){
    	$mswrap.children('li:last').css({position: 'relative'});
    } else{
    	$mswrap.children('li:last').css({left: (0 - maxwidth)+'px',position: 'relative'});
    }
    $mswrap.css('visibility','visible');
    $mswrap.width(maxwidth).find('img').each(function(i, node){
    	var $img = $(this),imgsrc = $img.attr("data-src")||'';
    	if ($.trim(imgsrc).length == 0) return;
             window['preload_'+params.layerid](imgsrc, function(imgwidth, imgheight){
    		var tmpw = 0,tmph = 0,height = $mscontent.height();
    		$img.attr('src',imgsrc);
    		if ((imgwidth >= width) || (imgheight >= height)) {
    			var direct = (imgwidth >= width) ? (imgwidth >= imgheight) : (imgheight < imgwidth);
    			if (direct) { // Horizontal
    				$img.width(width).height("auto");tmph = $img.height();
    				$img.css("margin", ((height - tmph) / 2)+'px 0');
    			} else { // Vertical
    				$img.height(height).width("auto");tmpw = $img.width();
    				$img.css("margin", '0 '+((width - tmpw) / 2)+'px');
    			}
    		} else $img.css("margin", ((height - imgheight) / 2)+'px '+((width - imgwidth) / 2)+'px');
    		$img.css("visibility", 'visible')
    		.closest('li').css({background: 'none',width: width+'px',height: height+'px'});
    	});
    });
    // Images switch
    var duration = $._parseFloat(params.interval) * 1000;
      window['autoplay_'+params.layerid] = function(status){
    	if (params.autoplay != '1') {
    		if ($mswrap.is(':animated')) $mswrap.stop(true, false);
    		var interid = window['interid_'+params.layerid];
    		if (interid != undefined) clearInterval(interid);
    		return;
    	}
    	var $msbar = $mscontent.find('> .mslider_bar'),curindex = $msbar.children('a.local').index();
    	if (status == undefined) curindex = Math.min(curindex + 1, maxln);
    	if(window['interid_'+params.layerid]) clearInterval(window['interid_'+params.layerid]);
    	window['interid_'+params.layerid] = setInterval(function(){
    		if (curindex > maxln - 1) {
    			$mswrap.animate({left: (0 - curindex*width)+'px'}, function(){
    				$(this).css("left", '0px');
    				$msbar.children('a:eq(0)').addClass("local")
    				.siblings().removeClass("local");
                    $msbar.children('a:eq(0)').find("span").addClass("local");
                    $msbar.children('a:eq(0)').siblings().find("span").removeClass("local");
    			});
    			curindex = 0;
    		} else {
    			$mscontent.find('> .mslider_bar > a:eq('+curindex+')').triggerHandler(mclick,[curindex]);
    		}
    		curindex++;
    	}, duration);
    }
    if (window.ontouchstart !== undefined) {
    	(function(){
    		var target = $mswrap[0];var pagex = 0; var pagey = 0; var curleft = 0;
            var need_stopPropagation=false;
            if(!window['is_touch_bind_'+params.layerid]){
    		target.addEventListener("touchstart", function(e){
    			var $target = $(this);
    			pagex = e.touches[0].pageX;
    			pagey = e.touches[0].pageY;
    			curleft = $._parseFloat($target.css("left"));
                   need_stopPropagation=false;
    		}, false);
    		target.addEventListener("touchmove", function(e){
    			if ($mswrap.is(':animated')) $mswrap.stop(true, false);
    			// init
    			var movex = e.touches[0].pageX - pagex,
    			movey = e.touches[0].pageY - pagey,newleft = curleft + movex;
                   if(need_stopPropagation){
                        e.stopPropagation();
                        e.preventDefault();
                    }
    			// fixed touchmove
    			if (Math.abs(movey) < 10 && Math.abs(movex) > 5) {
    				e.preventDefault();
    				e.stopPropagation();
    				need_stopPropagation=true;
    				// animated
    				$mswrap.css("left", newleft+'px')
    				.find('li>a').bind('click',function(e){e.preventDefault()});/*Disabled <a>*/
    			}
    		}, false);
    		target.addEventListener("touchend", function(e){
    			var interid = window['interid_'+params.layerid];
    			need_stopPropagation=false;
    			if (interid != undefined) clearInterval(interid);
    			var newleft = index = 0,movex = e.changedTouches[0].pageX - pagex,moveln = 30/*moved length*/,
    			curindex = $mscontent.find('> .mslider_bar > a.local').index(),moved = false;
    			if (Math.abs(movex) >= moveln) {
    				moved = true;
    				index = (movex < 0)?(curindex + 1):(curindex - 1);
    				if (index < 0) {
    					newleft = width;
    					index = maxln - 1;
    				} else {
    					newleft = 0 - index * width;
    					if((movex < 0)&&(curindex == maxln - 1)) index = 0;
    				}
    			} else {
    				index = curindex;
    				newleft = 0 - curindex * width;
    			}
    			$mswrap.animate({left: newleft+'px'}, function(){
    				$('li>a', this).unbind('click')/*Enabled <a>*/
    				$mscontent.find('> .mslider_bar > a:eq('+index+')').addClass("local")
    				.siblings().removeClass("local");
                    $mscontent.find('> .mslider_bar > a:eq('+index+')').find("span").addClass("local");
                    $mscontent.find('> .mslider_bar > a:eq('+index+')').siblings().find("span").removeClass("local");
    				if (moved == false) return;
    				if (index == 0) $(this).css("left", '0px');
    				if (index == maxln - 1) $(this).css("left", (0 - index*width)+'px');
                                window['autoplay_'+params.layerid]();
    			});
    		}, false);
            window['is_touch_bind_'+params.layerid]=true;
            }
    	})();
    } else {
    	$mswrap.bind('mousedown.mslider', function(e){
    		e.preventDefault();
    		var $target = $(this),pagex = e.pageX,curleft = $._parseFloat($target.css("left"));
    		if ($target.is(':animated')) $target.stop(true, false);
    		var interid = window['interid_'+params.layerid];
    		if (interid != undefined) clearInterval(interid);
    		$(document).bind('mousemove.mslider', function(e){
    			e.preventDefault();
    			$target.css("left", (curleft + e.pageX - pagex)+'px')
    			.find('li>a').bind('click',function(e){e.preventDefault()});/*Disabled <a>*/
    		}).bind('mouseup.mslider', function(e){
    			e.preventDefault();
    			$(document).unbind('.mslider');
    			var newleft = index = 0,movex = e.pageX - pagex,moveln = 30/*moved length*/,
    			curindex = $mscontent.find('> .mslider_bar > a.local').index(),moved = false;
    			if (Math.abs(movex) >= moveln) {
    				moved = true;
    				index = (movex < 0)?(curindex + 1):(curindex - 1);
    				if (index < 0) {
    					newleft = width;
    					index = maxln - 1;
    				} else {
    					newleft = 0 - index * width;
    					if((movex < 0)&&(curindex == maxln - 1)) index = 0;
    				}
    			} else {
    				index = curindex;
    				newleft = 0 - curindex * width;
    			}
    			$target.animate({left: newleft+'px'}, function(){
    				$('li>a', this).unbind('click')/*Enabled <a>*/
    				$mscontent.find('> .mslider_bar > a:eq('+index+')').addClass("local")
    				.siblings().removeClass("local");
                    $mscontent.find('> .mslider_bar > a:eq('+index+')').find("span").addClass("local");
                    $mscontent.find('> .mslider_bar > a:eq('+index+')').siblings().find("span").removeClass("local");
    				if (moved == false) return;
    				if (index == 0) $(this).css("left", '0px');
    				if (index == maxln - 1) $(this).css("left", (0 - index*width)+'px');
    				window['autoplay_'+params.layerid]();
    			});
    		});
    	});
    }
    // Pager
    $mscontent.find('> .mslider_bar > a').bind(mclick, function(e, n){
    	var $target = $(this),index = n||$target.index();
    	if ($mswrap.is(':animated')) $mswrap.stop(true, false);
    	var interid = window['interid_'+params.layerid];
    	if ((n == undefined) && (interid != undefined)) clearInterval(interid);
    	$target.addClass("local").siblings().removeClass("local");
        $target.find("span").addClass("local");
        $target.siblings().find("span").removeClass("local");
    	$mswrap.animate({left: (0 - index * width)+'px'}, function(){
    		(n == undefined) && window['autoplay_'+params.layerid]();
    	});
    });
    // Autoplay
    if (params.isrefresh) {
        var interid = window['interid_'+params.layerid];
        if (interid != undefined) clearInterval(interid);
        window['autoplay_'+params.layerid]();return;
    }
    window['autoplay_'+params.layerid]('init');
};
(function(){
	var fillcolor='#198ede';
	var strcolor='#666';
	var nw=150;
	var nh=100;
	var c;
	var cxt;
	var linepx=10;  //默认边框
	var shape_params;
	
	var zw=nw-(linepx/2); //减去边框后宽度
	var zh=nh-(linepx/2); //减去边框后高度
	var zx=linepx/2; //减去边框顶点位置
	
	var Shapes={}
		
	/*矩形--*/
	Shapes['rectan']=function() {
		cxt.save();
		cxt.beginPath();
		if(fillcolor!='transparent') cxt.fillStyle=fillcolor;
		cxt.strokeStyle=strcolor;
		if(linepx!=0)  cxt.lineWidth = linepx;  //边框大小
		if(fillcolor!='transparent') cxt.fillRect(zx,zx,zw*2,zh*2);
		if(linepx!=0)  cxt.strokeRect(zx,zx,zw*2,zh*2);
		if(fillcolor!='transparent')  cxt.fill();
		if(linepx!=0)  cxt.stroke();
	}

	/*圆形--*/
	Shapes['circle']=function() {
		cxt.save();
		var r = (zw > zh) ? zw : zh;
		var ratioX = zw / r;
		var ratioY = zh / r;
		cxt.translate(zx, zx);
		cxt.scale(ratioX, ratioY);
		cxt.beginPath();
		cxt.arc(zw/ratioX, zh/ratioY, r, 0, 2 * Math.PI, true);
		cxt.closePath();
		cxt.restore();

		if(fillcolor!='transparent') cxt.fillStyle=fillcolor;
		cxt.strokeStyle=strcolor;
		if(linepx!=0)  cxt.lineWidth = linepx;  //边框大小
		if(fillcolor!='transparent')  cxt.fill();
		if(linepx!=0)  cxt.stroke();
	}
	
	/*五角星*/
	Shapes['pentagram']=function(){ 
			cxt.save();
			var r = (zw > zh) ? zh : zw;
			//r=r;
			cxt.translate(0, zx);
			cxt.beginPath();   
          //设置是个顶点的坐标，根据顶点制定路径   
			for (var i = 0; i < 5; i++) {   
			   cxt.lineTo(Math.cos((18+i*72)/180*Math.PI)*r+r+zx,   
							   -Math.sin((18+i*72)/180*Math.PI)*r+r+zx);   
			   cxt.lineTo(Math.cos((54+i*72)/180*Math.PI)*(r/2)+r+zx,   
							   -Math.sin((54+i*72)/180*Math.PI)*(r/2)+r+zx);   
			}   
			cxt.closePath();   
		   if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
		   if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
		   if(linepx!=0) cxt.lineWidth =linepx;
		  if(fillcolor!='transparent')  cxt.fill();   
		   if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
		   cxt.restore();//返回原始状态
	}
	
	/*三角形--*/
	Shapes['triangle']=function(){ 
			 cxt.save();
			 cxt.beginPath();
			
			 cxt.moveTo(zx*2, zh*2+zx);
			 cxt.lineTo(zw+zx, zx*2);
			 cxt.lineTo(zw*2,zh*2+zx);
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth =linepx;
			if(fillcolor!='transparent')  cxt.fill();   
		     if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
	}

	/*平行四边形--*/
  	Shapes['parallelo']=function(){ 
			 cxt.save();
			 cxt.beginPath();
			 cxt.moveTo(zx*2, zh*2+zx);
			 cxt.lineTo(zw*1.4, zh*2+zx);
			 cxt.lineTo(zw*2, zx);
			 cxt.lineTo(zw*0.6+linepx, zx);
			 cxt.lineTo(zx*2, zh*2+zx);
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth =linepx;
			 if(fillcolor!='transparent')  cxt.fill();   
		      if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
	}
	
	/*梯形--*/
  	Shapes['trapezium']=function() { 
			 cxt.save();
			 cxt.beginPath();
			 cxt.moveTo(zx*2, zh*2+zx);
			 cxt.lineTo(zw*2, zh*2+zx);
			 cxt.lineTo(zw*1.5+zx, zx);
			 cxt.lineTo(zw*0.5+zx, zx);
			 cxt.lineTo(zx*2, zh*2+zx);
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth =linepx;
			 if(fillcolor!='transparent')  cxt.fill();   
		      if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
	}
	
	/*提示框形__左*/
	Shapes['roundtip_left']=function(){ 
	    var radius=parseInt(zw)*0.075; //圆角大小
	    if(radius<12){
			radius=12;
		} //圆角最小值
		
		var rjh= zh*0.75;
        cxt.beginPath();   
        cxt.arc( radius+zx, radius+zx, radius, Math.PI, Math.PI * 3 / 2);   
        cxt.lineTo(zw*2+zx - radius , zx);   
        cxt.arc(zw*2+zx - radius , radius +zx, radius, Math.PI * 3 / 2, Math.PI * 2);   
        cxt.lineTo(zw*2+zx , rjh*2  - radius);   
        cxt.arc(zw*2+zx - radius , rjh*2 - radius , radius, 0, Math.PI * 1 / 2); 
	    cxt.lineTo(radius*2.2+zx , rjh*2);    //左下箭头
        cxt.lineTo(radius*0.9 +zx, rjh*2+radius);  //左下箭头*/
		
        cxt.arc(radius+zx , rjh*2- radius , radius, Math.PI * 1 / 2, Math.PI); 
        cxt.closePath(); 
	   if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
	   if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
	   if(linepx!=0) cxt.lineWidth = linepx;
	   if(fillcolor!='transparent')  cxt.fill();   
	   if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
	   cxt.restore();//返回原始状态
    
	}
	
	/*提示框形__右*/
	Shapes['roundtip_right']=function() { 
	    var radius=parseInt(zw)*0.075; //圆角大小
	    if(radius<12){
			radius=12;
		} //圆角最小值
		
		var rjh= zh*0.75;
        cxt.beginPath();   
        cxt.arc( radius+zx, radius+zx, radius, Math.PI, Math.PI * 3 / 2);   
        cxt.lineTo(zw*2+zx - radius , zx);   
        cxt.arc(zw*2+zx - radius , radius +zx, radius, Math.PI * 3 / 2, Math.PI * 2);   
        cxt.lineTo(zw*2+zx , rjh*2  - radius);   
        cxt.arc(zw*2+zx - radius , rjh*2 - radius , radius, 0, Math.PI * 1 / 2); 
		cxt.lineTo(zw*2+zx-radius*0.9 , rjh*2+radius);  //右下箭头
	    cxt.lineTo(zw*2+zx-radius*2.2 , rjh*2);  //右下箭头
		
        cxt.arc(radius+zx , rjh*2- radius , radius, Math.PI * 1 / 2, Math.PI); 
        cxt.closePath(); 
	   if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
	   if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
	   if(linepx!=0) cxt.lineWidth = linepx;
	   if(fillcolor!='transparent')  cxt.fill();   
	   if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
		cxt.restore();//返回原始状态
	}
	
	
	/*箭头--*/
	Shapes['arrow']=function() { 
			 cxt.save();
			 cxt.beginPath();
			
			 cxt.moveTo(zx, zh*0.65+zx);
			 cxt.lineTo(zx, zh*1.35+zx);
			 cxt.lineTo(zw*1.04, zh*1.35+zx);
			 cxt.lineTo(zw*1.04, zh*2);
			 cxt.lineTo(zw*2,zh+zx);
			 cxt.lineTo(zw*1.04, zx*2);
			 cxt.lineTo(zw*1.04,zh*0.65+zx);
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth =linepx;
			 if(fillcolor!='transparent')  cxt.fill();   
		      if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
	}
	
	/*钻石形--*/
	Shapes['diamond']=function() { 
			 cxt.save();
			 cxt.beginPath();
			
			 cxt.moveTo(zx*2, zh*0.9);
			 cxt.lineTo(zw+zx, zh*2);
			 cxt.lineTo(zw*2, zh*0.9);
			 cxt.lineTo(zw*1.55+zx,zh*0.38);
			 cxt.lineTo(zw*0.45+zx,zh*0.38);
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth =linepx;
			 if(fillcolor!='transparent')  cxt.fill();   
		      if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
			
	}
	
	/*正多边形*/
   	Shapes['isogon']=function(){ 
	           var ib=5;
			 if(shape_params.ib>2) ib=shape_params.ib;
			 var i,ang;
			 var dzw=zw+zx*1.8-linepx;
			 var dzh=zh+zx*1.8-linepx;
			 var r = (dzw > dzh) ? dzh : dzw;
//			 ib = $('.inputvalue').val();
			 ang = Math.PI*2/ib;  //旋转的角度
			 cxt.save();//保存状态
			 cxt.translate(nw, nh);//原点移到x,y处，即要画的多边形中心
			 cxt.moveTo(0, -r);//据中心r距离处画点
			 cxt.beginPath();
			 for(i = 0;i < ib; i ++)
			 {
			   cxt.rotate(ang)//旋转
			   cxt.lineTo(0, -r);//据中心r距离处连线
			 }
			 cxt.closePath();
			 if(fillcolor!='transparent') cxt.fillStyle = fillcolor;   
			 if(strcolor!='transparent') cxt.strokeStyle = strcolor;  
			 if(linepx!=0) cxt.lineWidth = linepx;//设置线宽
			 if(fillcolor!='transparent')  cxt.fill();   
		      if(linepx!=0 && strcolor!='transparent') cxt.stroke();  
			 cxt.restore();//返回原始状态
	}

	
	
	function ClearCanvas(){
		cxt.clearRect(0, 0, nw*2, nh*2);
	} 

	
	function layer_mshapes_draw_func(params){
		var layerid=params.layerid;
		var shapetype=params.shape_type;
		var canvasel=$('#'+layerid).find('canvas');
		var w=$('#'+layerid).find('.wp-mshapes_content').width();
		var h=$('#'+layerid).find('.wp-mshapes_content').height();
		canvasel.attr('width',w);
		canvasel.attr('height',h);
		if(params.fillcolor) fillcolor=params.fillcolor;
		if(params.strcolor) strcolor=params.strcolor;
		if(params.borderline != null) linepx=parseInt(params.borderline); 
		shape_params=params;
		
		c = canvasel[0];
		cxt = c.getContext("2d");
		nw=parseInt(w/2);
		nh=parseInt(h/2);
		
		zw=nw-parseInt(linepx/2); //减去边框后宽度
		zh=nh-parseInt(linepx/2); //减去边框后高度
		zx=parseInt(linepx/2); //减去边框顶点位置
		ClearCanvas();
		if(Shapes[shapetype]) Shapes[shapetype]();
	}
	window.layer_mshapes_draw_func=layer_mshapes_draw_func
	
})();

;
function layer_mseckill_list_ready_func(params){
    var layerid = params.layerid;
    window['set_thumb_'+layerid] = function(obj) {
		var callback=function(img){
				img.fadeIn('slow',function(){
				img.closest('.img,.wp-new-product-style-01-left').children('.imgloading').remove();
			   });	
		}
		$(obj).each(function() {
			var img=$(this);
			callback(img);
		});      
    };
    
    if (params.prdstyle === "01") {
	$(function(){
	  	var maxliheight = 0,tmplayerid = "#"+layerid;
		if (tmplayerid.length == 1) return;var $tmpnode = $(tmplayerid+' li > .wp-new-article-style-c');
		maxliheight = Math.max.apply(null,$tmpnode.map(function(){return $(this).outerHeight();}).toArray());
		//if (maxliheight) $tmpnode.height(maxliheight);
		// 右间距 2014/03/17
		$(tmplayerid).bind("fixedmarginright", function(e, margin){
			var $target = $(this),$li = $target.find('li');
			if(margin != undefined) $li.css("margin-right", margin+'px');
			var $first = $li.filter(':first'),liwidth = $first.width(),
			mgnright = $._parseFloat($first.css("marginRight")),
			maxwidth = $target.children('.wp-product_list_content').width(),
			maxcols = Math.floor(maxwidth / (liwidth + mgnright));
			if(maxwidth >= maxcols * (liwidth + mgnright) + liwidth) maxcols += 1;
			for(var i = 1,licnt = $li.length; i <= licnt; i++){			
				if (i % maxcols != 0) continue;
				if ((maxcols == 1) && (2*liwidth <= maxwidth)) continue;
				$li.filter(':eq('+(i - 1)+')').css("margin-right", '0');
			}
			var borderth = $first.css("border-left-width");
			borderth = parseInt(borderth);
			if(borderth>0){
				$li.each(function(){
					$(this).css("margin-left", '-'+borderth+'px');
				})
			}
			 
			$curlayer = $li = null;
		}).triggerHandler("fixedmarginright");
		// <<End
		var $sitestar_miaosha_img = $(tmplayerid).find('div.img');
		if($sitestar_miaosha_img.length){
			var $sitestar_miaosha_img_lh = parseInt($sitestar_miaosha_img.parent().height());
			if($sitestar_miaosha_img_lh){
				//$sitestar_miaosha_img.parent().height($sitestar_miaosha_img_lh+1+'px');
			}
		}
		tmplayerid = $tmpnode = null;

	});
    }
    
}

function layer_mseckill_list_init_func(params){
    var $curlayer = $('#'+params.layerid);
    $curlayer.mod_property({"prdliststyle": params.prdliststyle});
    $curlayer.find('.mask').css({'width':$curlayer.width(),'height':$curlayer.height()});
}

function layer_mseckill_list_lazyload_func(layerid){
    var chromebug=$('#scroll_container').data('chrome_bug');
    var imgcontainer=$('#scroll_container');
    if(chromebug){
    	imgcontainer=window;
    }
    $('#'+layerid).find('img.img_lazy_load').lazyload({
	 threshold  : 200,
	 failure_limit : $('#'+layerid).find('img.img_lazy_load').length,	
	  container : $('#scroll_container'),	
	  placeholder: relativeToAbsoluteURL('template/default/images/blank.gif'),
	  load:function(){
		 var self=$(this);
		 var id=self.closest('.cstlayer').prop('id');
		if(window['set_thumb_'+id]) window['set_thumb_'+id](this);
	 }
    });
    
}

function layer_mseckill_list_pager_func(options){
    var layerid = options.layerid,$cstlayer = $('#'+layerid),
    $pglnker = $cstlayer.find('.wp-mseckill_list_content .wp-pager_link');
    $pglnker.find('a').click(function(e,page){
		var urlhrf = $(this).attr("href");
	     if(urlhrf=="#") return false;
	     if(urlhrf.indexOf("#")==0){
		var pageid = page||$(this).attr("href").replace("###",'');
		if(options.isedit == "1") $.method.mseckill_list.refreshProductList({"page":pageid,"layerid":layerid});	
		else {
			var dom = $cstlayer.find('.product_list_save_itemList'),
			params = {
				"layer_id": layerid,
				"productCategroies": dom.attr("productCategroies"),
				"productTags": dom.attr("producttags"),
				"linkCategoryUrl": dom.attr("linkCategoryUrl"),
				"linkMoreUrl": dom.attr("linkMoreUrl"),
				"isShowMore": dom.attr("isShowMore"),
				"linkDetailUrl": dom.attr("linkDetailUrl"),
				"isShowDots": dom.attr("isShowDots"),
				"introWordNum": dom.attr("introWordNum"),
				"titleWordNum": dom.attr("titleWordNum"),
				"listNum": dom.attr("listNum"),
				"productStyle": dom.attr("productStyle"),
				"showpager": dom.attr("showpager"),
				"pagernum": dom.attr("pagernum"),
				"pageralign":dom.attr("pageralign"),
				"morealign":dom.attr("morealign"),
				"imgwnode": dom.attr("imgwnode"),
				"imghnode": dom.attr("imghnode"),
				"imgtnode": dom.attr("imgtnode"),
				"pagerstyle": dom.attr("pagerstyle"),
				"getParamCategoryId": dom.attr("getParamCategoryId"),
				"content_style": $cstlayer.children(".wp-mseckill_list_content").attr("style"),
				openCategoryUrl:dom.attr('openCategoryUrl'),
				openMoreUrl:dom.attr('openMoreUrl'),
				openDetailUrl:dom.attr('openDetailUrl'),
				"page": pageid
			};
			$.post(parseToURL('mseckill_list','refreshProductList'),$.extend({},params,{"prdliststyle": params.prdliststyle}),function(data){
				var $layer = $("#"+layerid);
				var oldHeight = $layer.find('.product_list-'+layerid).height();
				$layer.children('.wp-mseckill_list_content').before(data).remove();
	var this_dom = $('#'+layerid);
	this_dom.find(".wp-pager_link").css({'position':'relative','bottom':'auto','width':'100%'});	
	wp_heightAdapt($layer);
	var cheight = this_dom.find(".wp-seckill_content").height();
	var oulheight = this_dom.find(".product_list-"+layerid).height();
	var olkheight = this_dom.find(".wp-pager_link").outerHeight();
	if(cheight>oulheight+olkheight){
		this_dom.find(".wp-pager_link").css({'position':'absolute','bottom':'0px','width':'100%','height':'72px'})
	} 
		 layer_mseckill_list_pager_totop(layerid);
			});
		}
		return false;
		 }
    });
    
	$pglnker.find('.pageseldomli').change(function(e,page){
		var urlhrf = $(this).val();
	     if(urlhrf.indexOf("#")==0){
		var pageid = page||$(this).val().replace("###",'');
		if(options.isedit == "1") $.method.mseckill_list.refreshProductList({"page":pageid,"layerid":layerid});	
		else {
			var dom = $cstlayer.find('.product_list_save_itemList'),
			params = {
				"layer_id": layerid,
				"productCategroies": dom.attr("productCategroies"),
				"productTags": dom.attr("producttags"),
				"linkCategoryUrl": dom.attr("linkCategoryUrl"),
				"linkMoreUrl": dom.attr("linkMoreUrl"),
				"isShowMore": dom.attr("isShowMore"),
				"linkDetailUrl": dom.attr("linkDetailUrl"),
				"isShowDots": dom.attr("isShowDots"),
				"introWordNum": dom.attr("introWordNum"),
				"titleWordNum": dom.attr("titleWordNum"),
				"listNum": dom.attr("listNum"),
				"productStyle": dom.attr("productStyle"),
				"showpager": dom.attr("showpager"),
				"pagernum": dom.attr("pagernum"),
				"pageralign":dom.attr("pageralign"),
				"morealign":dom.attr("morealign"),
				"imgwnode": dom.attr("imgwnode"),
				"imghnode": dom.attr("imghnode"),
				"imgtnode": dom.attr("imgtnode"),
				"pagerstyle": dom.attr("pagerstyle"),
				"getParamCategoryId": dom.attr("getParamCategoryId"),
				"content_style": $cstlayer.children(".wp-mseckill_list_content").attr("style"),
				openCategoryUrl:dom.attr('openCategoryUrl'),
				openMoreUrl:dom.attr('openMoreUrl'),
				openDetailUrl:dom.attr('openDetailUrl'),
				"page": pageid
			};
			$.post(parseToURL('mseckill_list','refreshProductList'),$.extend({},params,{"prdliststyle": params.prdliststyle}),function(data){
				var $layer = $("#"+layerid);
				var oldHeight = $layer.find('.product_list-'+layerid).height();
				$layer.children('.wp-mseckill_list_content').before(data).remove();
	var this_dom = $('#'+layerid);
	this_dom.find(".wp-pager_link").css({'position':'relative','bottom':'auto','width':'100%'});	
	wp_heightAdapt($layer);
	var cheight = this_dom.find(".wp-seckill_content").height();
	var oulheight = this_dom.find(".product_list-"+layerid).height();
	var olkheight = this_dom.find(".wp-pager_link").outerHeight();
	if(cheight>oulheight+olkheight){
		this_dom.find(".wp-pager_link").css({'position':'absolute','bottom':'0px','width':'100%','height':'72px'})
	} 
				 layer_mseckill_list_pager_totop(layerid);
			});
		}
		return false;
		 }else{
		window.location.href= urlhrf;	 
		}
    });
    
   
    // About input
    $pglnker.find(':input').each(function(i,dom){
		var $input = $(this),ent = pgid = '',fnc;
		switch($input.attr("type")) {
			case "text":
				ent = 'keyup';
				fnc = function(){
					pgid = this.value = this.value.replace(/(?:\b0|[^\d+])/i,'');
					return false;
				};
				break;
			case "button":
				ent = 'click';
				fnc = function(){
					if (pgid.length && /^[1-9]{1}\d*$/.test(pgid)) {
						var maxpg = _int($pglnker.find('span.total').html());
						if(!maxpg) maxpg = 1;
						$pglnker.find('a').triggerHandler('click',[Math.min(pgid,maxpg)]);
					}
					function _int(numString){
						var number = parseInt(numString);
						if(isNaN(number)) return 0;
						return number;
					}
					return false;
				};
				break;
		}
		if(fnc && $.isFunction(fnc)) $input[ent](fnc);
    });
}

function layer_mseckill_list_pager_totop(layerid){
	$('#'+layerid)[0].scrollIntoView();
}
